{"version":3,"sources":["Components/UI/dark-context.js","Components/Header/Header.js","Components/State/data-context.js","Components/Main/Navigation/SearchBar.js","Components/Main/Navigation/FilterBar.js","Components/Main/Countries/Countries.js","Components/Main/Countries/Borders.js","Components/Main/Countries/Detail.js","Components/Main/Main.js","App.js","Components/UI/Helper.js","Components/State/DataContextProvider.js","index.js"],"names":["DarkContext","React","createContext","darkMode","onSwitchMode","DarkContextProvider","props","useState","mode","setMode","Provider","value","className","children","Header","ctx","useContext","onClick","DataContext","listed","detailed","detailedView","searchCountry","data","filterCountry","detailCountry","SearchBar","dataCtx","enteredValue","setEnteredValue","useEffect","search","setTimeout","length","clearTimeout","onSubmit","event","preventDefault","type","placeholder","onChange","entry","target","FilterBar","options","displayOptions","setFilterHandler","e","region","dataset","Countries","viewCountryHandler","countryId","closest","id","displayedCountries","map","country","index","name","common","src","flags","svg","alt","Intl","NumberFormat","format","population","capital","Borders","content","borders","Detail","currencies","Object","values","curr","join","languages","changeView","official","subregion","tld","Main","App","checkLocal","fetchCountries","timer","time","a","Promise","_","reject","Error","fetchAll","race","fetch","response","ok","err","console","error","message","json","defaultState","all","unique","searchCountryHandler","filterCountryHandler","detailCountryHandler","changeViewHandler","listReducer","state","action","allCountries","countries","filter","toLowerCase","includes","countryToDisplay","find","bord","borderCountries","bor","cca3","flat","border","sortedName","sort","sorted","forEach","indexOf","string","JSON","stringify","localStorage","setItem","DataContextProvider","useReducer","listState","setListedCountries","fetchAllHandler","dataContext","item","getItem","startW","startsWith","include","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5900a05b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst DarkContext = React.createContext({\r\n\tdarkMode: false,\r\n\tonSwitchMode: () => {},\r\n});\r\n\r\nexport const DarkContextProvider = (props) => {\r\n\tconst [mode, setMode] = useState(\"light\");\r\n\r\n\tconst switchModeHandler = () => {\r\n\t\tif (mode === \"light\") {\r\n\t\t\tsetMode(\"dark\");\r\n\t\t\tDarkContext.darkMode = true;\r\n\t\t}\r\n\t\tif (mode === \"dark\") {\r\n\t\t\tsetMode(\"light\");\r\n\t\t\tDarkContext.darkMode = false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<DarkContext.Provider value={{ darkMode: mode, onSwitchMode: switchModeHandler }}>\r\n\t\t\t<div className={mode}>{props.children}</div>\r\n\t\t</DarkContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default DarkContext;\r\n","import \"./Header.css\";\r\nimport { BiMoon } from \"react-icons/bi\";\r\nimport { BsMoon } from \"react-icons/bs\";\r\n\r\nimport { useContext } from \"react\";\r\nimport DarkContext from \"../UI/dark-context\";\r\n\r\nconst Header = () => {\r\n\tconst ctx = useContext(DarkContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"title\">\r\n\t\t\t<h3>Where in the world?</h3>\r\n\t\t\t<div onClick={ctx.onSwitchMode}>\r\n\t\t\t\t{ctx.darkMode === \"dark\" && <BsMoon className=\"moon\" />}\r\n\t\t\t\t{ctx.darkMode === \"light\" && <BiMoon className=\"moon\" />}\r\n\t\t\t\tDark Mode\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst DataContext = React.createContext({\r\n\tlisted: [],\r\n\tdetailed: [],\r\n\tdetailedView: false,\r\n\r\n\tsearchCountry: (data) => {},\r\n\tfilterCountry: (data) => {},\r\n\tdetailCountry: (data) => {},\r\n});\r\n\r\nexport default DataContext;\r\n","import \"./SearchBar.css\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi/\";\r\nimport DataContext from \"../../State/data-context\";\r\n\r\nconst SearchBar = () => {\r\n\tconst dataCtx = useContext(DataContext);\r\n\tconst [enteredValue, setEnteredValue] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst search = setTimeout(() => {\r\n\t\t\tif (enteredValue.length > 0) {\r\n\t\t\t\tdataCtx.searchCountry(enteredValue);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(search);\r\n\t\t};\r\n\t}, [enteredValue]);\r\n\r\n\tconst inputHandler = (event) => {\r\n\t\tconst entry = event.target.value;\r\n\t\tsetEnteredValue(entry);\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdataCtx.searchCountry(enteredValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div>\r\n\t\t\t\t<BiSearchAlt2 className=\"search\" />\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search for a country...\" onChange={inputHandler} />\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import \"./FilterBar.css\";\r\nimport { FiChevronDown } from \"react-icons/fi\";\r\nimport { useContext, useState } from \"react\";\r\nimport DataContext from \"../../State/data-context\";\r\n\r\nconst FilterBar = (props) => {\r\n\tconst [options, displayOptions] = useState(false);\r\n\tconst dataCtx = useContext(DataContext);\r\n\r\n\tconst filterRegion = () => {\r\n\t\t!options && displayOptions(true);\r\n\t\toptions && displayOptions(false);\r\n\t};\r\n\r\n\tconst setFilterHandler = (e) => {\r\n\t\tconst region = e.target.dataset.region;\r\n\t\tdisplayOptions(false);\r\n\t\tdataCtx.filterCountry(region);\r\n\t\t// searchCountryByRegion(region);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"filter--select filter\">\r\n\t\t\t<div className=\"select\" onClick={filterRegion}>\r\n\t\t\t\tFilter by Region <FiChevronDown className=\"arrowDown\" />\r\n\t\t\t</div>\r\n\t\t\t{options && (\r\n\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t<div data-region=\"Africa\" onClick={setFilterHandler}>\r\n\t\t\t\t\t\tAfrica\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div data-region=\"Americas\" onClick={setFilterHandler}>\r\n\t\t\t\t\t\tAmericas\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div data-region=\"Asia\" onClick={setFilterHandler}>\r\n\t\t\t\t\t\tAsia\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div data-region=\"Europe\" onClick={setFilterHandler}>\r\n\t\t\t\t\t\tEurope\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div data-region=\"Oceania\" onClick={setFilterHandler}>\r\n\t\t\t\t\t\tOceania\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FilterBar;\r\n","import \"./Countries.css\";\r\nimport DataContext from \"../../State/data-context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Countries = (props) => {\r\n\tconst dataCtx = useContext(DataContext);\r\n\r\n\tconst viewCountryHandler = (event) => {\r\n\t\tconst countryId = event.target.closest(\".country\").id;\r\n\t\tdataCtx.detailCountry(countryId);\r\n\t};\r\n\r\n\tconst displayedCountries = dataCtx.listed.map((country, index) => (\r\n\t\t<article\r\n\t\t\tclassName=\"country\"\r\n\t\t\tid={country.name.common}\r\n\t\t\tkey={`${country.name.common}${index}`}\r\n\t\t\tonClick={viewCountryHandler}\r\n\t\t>\r\n\t\t\t<div className=\"flag\">\r\n\t\t\t\t<img className=\"flag\" src={country.flags.svg} alt=\"flag\"></img>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"stats\">\r\n\t\t\t\t<ul className=\"country-stats\">\r\n\t\t\t\t\t<li key={country.name.common + index}>\r\n\t\t\t\t\t\t<h3>{country.name.common}</h3>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li key={`${country.population + country.name}`}>\r\n\t\t\t\t\t\t<span>Population:</span> {new Intl.NumberFormat().format(country.population)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li key={`${country.name + country.region}`}>\r\n\t\t\t\t\t\t<span>Region: </span> {country.region}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li key={`${country}.capital`}>\r\n\t\t\t\t\t\t<span>Capital: </span>\r\n\t\t\t\t\t\t{country.capital}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t));\r\n\r\n\treturn <main className=\"countries--container\">{displayedCountries}</main>;\r\n};\r\n\r\nexport default Countries;\r\n","import { Fragment, useContext } from \"react\";\r\nimport \"./Borders\";\r\nimport DataContext from \"../../State/data-context\";\r\n\r\nconst Borders = () => {\r\n\tconst dataCtx = useContext(DataContext);\r\n\r\n\tconst viewCountryHandler = (event) => {\r\n\t\tconst countryId = event.target.closest(\".bord\").id;\r\n\t\tdataCtx.detailCountry(countryId);\r\n\t};\r\n\r\n\tconst content = dataCtx.borders.map((country, index) => (\r\n\t\t<li key={`${country}${index}`} id={country} value={country} className=\"bord\" onClick={viewCountryHandler}>\r\n\t\t\t{country}\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn <Fragment>{content}</Fragment>;\r\n};\r\n\r\nexport default Borders;\r\n","import \"./Detail.css\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport DataContext from \"../../State/data-context\";\r\nimport Borders from \"./Borders\";\r\n\r\nconst Detail = () => {\r\n\tconst dataCtx = useContext(DataContext);\r\n\tconst country = dataCtx.detailed;\r\n\r\n\tconst changeView = () => {\r\n\t\tdataCtx.changeView();\r\n\t};\r\n\r\n\tconst currencies = Object.values(country.currencies)\r\n\t\t.map((curr) => curr.name)\r\n\t\t.join(\", \");\r\n\r\n\tconst languages = Object.values(country.languages).join(\", \");\r\n\r\n\tconst content = (\r\n\t\t<section className=\"details\">\r\n\t\t\t<button className=\"button-back\" onClick={changeView}>\r\n\t\t\t\t<BsArrowLeft className=\"arrowLeft\" />\r\n\t\t\t\tBack\r\n\t\t\t</button>\r\n\r\n\t\t\t<main className=\"details--country--container\">\r\n\t\t\t\t<img className=\"flag-detail\" src={country.flags.svg} alt=\"flag\"></img>\r\n\r\n\t\t\t\t<div className=\"stats--container\">\r\n\t\t\t\t\t<h2>{country.name.common}</h2>\r\n\t\t\t\t\t<div className=\"stats--inner--container\">\r\n\t\t\t\t\t\t<ul className=\"detail-stats stats\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Native Name:</span> {country.name.official}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Population:</span> {new Intl.NumberFormat().format(country.population)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Region: </span> {country.region}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Sub Region: </span> {country.subregion}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Capital: </span> {country.capital}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t<ul className=\"detail-stats-two stats\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Top Level Domain: </span>\r\n\t\t\t\t\t\t\t\t{country.tld ? [...country.tld] : country.tld}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Currencies: </span> {currencies}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span>Languages: </span> {languages}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<div className=\"detail-stats-three\">\r\n\t\t\t\t\t\t\t<h4> Border Countries:</h4>\r\n\t\t\t\t\t\t\t<ul className=\"border-countries\">{dataCtx.borders && <Borders />}</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</section>\r\n\t);\r\n\r\n\treturn <Fragment> {content}</Fragment>;\r\n};\r\n\r\nexport default Detail;\r\n","import SearchBar from \"./Navigation/SearchBar\";\r\nimport FilterBar from \"./Navigation/FilterBar\";\r\nimport Countries from \"./Countries/Countries\";\r\nimport DataContext from \"../State/data-context\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Detail from \"./Countries/Detail\";\r\n\r\nconst Main = () => {\r\n\tconst dataCtx = useContext(DataContext);\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t{!dataCtx.detailedView && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<header className=\"container-search\">\r\n\t\t\t\t\t\t<SearchBar />\r\n\t\t\t\t\t\t<FilterBar />\r\n\t\t\t\t\t</header>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t{!dataCtx.detailedView && <Countries />}\r\n\t\t\t{dataCtx.detailedView && <Detail />}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import { useContext, useEffect } from \"react\";\nimport css from \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\nimport DataContext from \"./Components/State/data-context\";\n\nfunction App() {\n\tconst dataCtx = useContext(DataContext);\n\n\tconst fetch = () => {\n\t\tdataCtx.fetchCountries();\n\t};\n\n\tuseEffect(() => {\n\t\tif (!dataCtx.checkLocal());\n\t\t{\n\t\t\tfetch();\n\t\t}\n\n\t\tsetTimeout(() => {}, 500);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<Header />\n\t\t\t</header>\n\t\t\t<Main />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// Update V3.1 : FetchAll only\r\n\r\nexport const timer = async function (time) {\r\n\treturn new Promise(function (_, reject) {\r\n\t\tsetTimeout(() => {\r\n\t\t\treject(new Error(`Request took too long! ${time} secondes passed!`));\r\n\t\t}, time * 1000);\r\n\t});\r\n};\r\n\r\nexport const fetchAlphaCode = async (value) => {\r\n\ttry {\r\n\t\tconst response = await Promise.race([fetch(`https://restcountries.eu/rest/v2/alpha/${value}`), timer(2)]);\r\n\t\tif (!response.ok) throw new Error((err) => console.error(err.message));\r\n\t\tconst data = await response.json();\r\n\t\treturn getRequiredData(data);\r\n\t} catch (err) {\r\n\t\tconsole.log(err.message);\r\n\t}\r\n};\r\n\r\nexport const fetchEntry = async (entry) => {\r\n\ttry {\r\n\t\tconst response = await Promise.race([fetch(`https://restcountries.eu/v3.1/name/${entry}`), timer(2)]);\r\n\t\tif (!response.ok) throw new Error((err) => console.error(err.message));\r\n\t\tconsole.log(response);\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\tconst requiredData = data.map((country) => getRequiredData(country));\r\n\t\treturn requiredData;\r\n\t} catch (err) {\r\n\t\tconsole.log(err.message);\r\n\t}\r\n};\r\n\r\nexport const fetchRegion = async (region) => {\r\n\ttry {\r\n\t\tconst response = await Promise.race([\r\n\t\t\tfetch(`https://restcountries.eu/rest/v2/region/${region}`),\r\n\t\t\ttimer(2),\r\n\t\t]);\r\n\t\tif (!response.ok) throw new Error((err) => console.error(err.message));\r\n\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.error(err.message);\r\n\t}\r\n};\r\n\r\n// export const fetchBorders = async (data, state) => {\r\n// \ttry {\r\n// \t\tconsole.log(data);\r\n// \t\tconst bordersAlphaCode = data.map((country) => country.borders);\r\n// \t\tconsole.log(bordersAlphaCode);\r\n// \t\tconst borders = await bordersAlphaCode.forEach(\r\n// \t\t\t(country) => (console.log(country), fetchAlphaCode(country))\r\n// \t\t);\r\n// \t\tif (!borders.ok) throw new Error((err) => console.error(\"Cannot fetch borders: no response\"));\r\n// \t\tconst bordersName = await borders.map((bor) => bor.name);\r\n// \t\tif (!borders.ok) throw new Error((err) => console.error(\"Cannot fetch borders: no response\"));\r\n// \t\tif (bordersName) console.log(bordersName);\r\n// \t} catch (err) {\r\n// \t\tconsole.error(err.message);\r\n// \t}\r\n// };\r\n\r\n// const fetchState = async (data, state) => {\r\n// \ttry {\r\n// \t\tconst countries = data.map((country) => state.find(country));\r\n// \t} catch (err) {\r\n// \t\tconsole.error(err.message);\r\n// \t}\r\n// };\r\n\r\nexport const getRequiredData = (data) => {\r\n\treturn {\r\n\t\tname: data.name,\r\n\t\tnativeName: data.nativeName,\r\n\t\tpopulation: data.population,\r\n\t\tregion: data.region,\r\n\t\tsubregion: data.subregion,\r\n\t\tcapital: data.capital,\r\n\t\ttopLevelDomain: data.topLevelDomain,\r\n\t\tcurrencies: data.currencies,\r\n\t\tlanguages: data.languages,\r\n\t\tborders: data.borders,\r\n\t\tflag: data.flag,\r\n\t\talpha3Code: data.alpha3Code,\r\n\t\tid: data.name,\r\n\t};\r\n};\r\n\r\n//  Rest Countries V3.1 with useEffect fetch all\r\n// https://restcountries.com/v3.1/all\r\n\r\nexport const fetchAll = async () => {\r\n\ttry {\r\n\t\tconst response = await Promise.race([fetch(`https://restcountries.com/v3.1/all`), timer(2)]);\r\n\t\tif (!response.ok) throw new Error((err) => console.error(err.message));\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.error(err.message);\r\n\t}\r\n};\r\n","import DataContext from \"./data-context\";\r\nimport { useReducer } from \"react\";\r\nimport { fetchAll } from \"../UI/Helper\";\r\n\r\nconst defaultState = {\r\n\tall: [],\r\n\tlisted: [],\r\n\tunique: [],\r\n\tdetailed: [],\r\n\tdetailedView: false,\r\n\tborders: [],\r\n\tsearchCountryHandler: (data) => {},\r\n\tfilterCountryHandler: (data) => {},\r\n\tdetailCountryHandler: (data) => {},\r\n\tchangeViewHandler: (data) => {},\r\n\tfetchCountries: () => {},\r\n};\r\n\r\nconst listReducer = (state, action) => {\r\n\tconst all = state.allCountries;\r\n\tconst { entry } = action;\r\n\r\n\tif (action.type === \"SEARCH\") {\r\n\t\tconst countries = all.filter((country) => country.name.common.toLowerCase().includes(entry));\r\n\t\treturn { ...state, listed: countries };\r\n\t}\r\n\r\n\tif (action.type === \"FILTER\") {\r\n\t\tconst countries = all.filter((country) => country.region === entry);\r\n\t\treturn { ...state, listed: countries, detailedView: false };\r\n\t}\r\n\r\n\tif (action.type === \"CHANGEVIEW\") {\r\n\t\treturn { ...state, detailedView: false };\r\n\t}\r\n\r\n\tif (action.type === \"DETAILED\") {\r\n\t\tconst countryToDisplay = all.find((country) => country.name.common === action.id);\r\n\t\tconst bord = countryToDisplay.borders ?? null;\r\n\t\tconst borderCountries = bord\r\n\t\t\t?.map((bor) => all.filter((country) => country.cca3 === bor))\r\n\t\t\t.flat()\r\n\t\t\t.map((border) => border.name.common);\r\n\r\n\t\treturn { ...state, detailedView: true, detailed: countryToDisplay, borders: borderCountries };\r\n\t}\r\n\r\n\tif (action.type === \"FETCHALL\") {\r\n\t\tconst countries = action.countries;\r\n\t\tconst sortedName = countries.map((country) => country.name.common).sort();\r\n\t\tlet sorted = [];\r\n\t\tcountries.forEach((country) => {\r\n\t\t\tconst index = sortedName.indexOf(country.name.common);\r\n\t\t\tsorted[index] = country;\r\n\t\t});\r\n\r\n\t\tconst string = JSON.stringify(sorted);\r\n\t\tlocalStorage.setItem(\"countries\", string);\r\n\t\treturn { ...state, allCountries: sorted };\r\n\t}\r\n\r\n\tif (action.type === \"FETCHLOCAL\") {\r\n\t\tconst countries = action.countries;\r\n\t\treturn { ...state, allCountries: countries };\r\n\t}\r\n};\r\n\r\nconst DataContextProvider = (props) => {\r\n\tconst [listState, setListedCountries] = useReducer(listReducer, defaultState);\r\n\r\n\t// const searchCountryHandler = async (entry) => {\r\n\t// \tconst data = await fetchEntry(entry);\r\n\t// \tif (data) {\r\n\t// \t\tsetListedCountries({ type: \"SEARCH\", countries: data });\r\n\t// \t\t// fetchBorders(data); Still to do\r\n\t// \t}\r\n\t// };\r\n\r\n\tconst searchCountryHandler = (entry) => {\r\n\t\tsetListedCountries({ type: \"SEARCH\", entry: entry });\r\n\t};\r\n\r\n\t// const filterCountryHandler = async (region) => {\r\n\t// \tconst data = await fetchRegion(region);\r\n\t// \tif (data) setListedCountries({ type: \"FILTER\", countries: data });\r\n\t// };\r\n\r\n\tconst filterCountryHandler = (entry) => {\r\n\t\tsetListedCountries({ type: \"FILTER\", entry: entry });\r\n\t};\r\n\r\n\tconst detailCountryHandler = (id) => {\r\n\t\tsetListedCountries({ type: \"DETAILED\", id: id });\r\n\t};\r\n\r\n\tconst changeViewHandler = () => {\r\n\t\tsetListedCountries({ type: \"CHANGEVIEW\" });\r\n\t};\r\n\r\n\tconst fetchAllHandler = async () => {\r\n\t\tconst data = await fetchAll();\r\n\t\tsetListedCountries({ type: \"FETCHALL\", countries: data });\r\n\t};\r\n\r\n\tconst checkLocalDataHandler = () => {\r\n\t\tconst item = localStorage.getItem(\"countries\") ?? \"\";\r\n\t\tconst startW = item.startsWith(`[{\"name\":{\"common\":\"El Salvador\",`);\r\n\t\tconst include = item.includes(`{\"USD\":{\"name\":\"United States dollar\",\"symbol\":\"$\"}},\"idd\":{\"root\":`);\r\n\r\n\t\tif (!startW || !include) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst data = JSON.parse(item);\r\n\t\tsetListedCountries({ type: \"FETCHLOCAL\", countries: data });\r\n\t};\r\n\r\n\tconst dataContext = {\r\n\t\tallCountries: listState.allCountries,\r\n\t\tlisted: listState.listed,\r\n\t\tdetailed: listState.detailed,\r\n\t\tdetailedView: listState.detailedView,\r\n\t\tborders: listState.borders,\r\n\t\tsearchCountry: searchCountryHandler,\r\n\t\tfilterCountry: filterCountryHandler,\r\n\t\tdetailCountry: detailCountryHandler,\r\n\t\tchangeView: changeViewHandler,\r\n\t\tfetchCountries: fetchAllHandler,\r\n\t\tcheckLocal: checkLocalDataHandler,\r\n\t};\r\n\r\n\treturn <DataContext.Provider value={dataContext}>{props.children}</DataContext.Provider>;\r\n};\r\n\r\nexport default DataContextProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DarkContextProvider } from \"./Components/UI/dark-context\";\nimport DataContextProvider from \"./Components/State/DataContextProvider\";\n\nReactDOM.render(\n\t<DarkContextProvider>\n\t\t<DataContextProvider>\n\t\t\t<React.StrictMode>\n\t\t\t\t<App />\n\t\t\t</React.StrictMode>\n\t\t</DataContextProvider>\n\t</DarkContextProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}